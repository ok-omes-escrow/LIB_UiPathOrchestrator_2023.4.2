<Activity mc:Ignorable="sap sap2010" x:Class="Get_Next_Previous_Working_Day" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Please Provide Search date in this format - (&quot;yyyy-MM-dd&quot;).&#xA;Example : 2023-12-01 &#xA;" Name="in_strInputDate" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="This will be output in this format - (&quot;yyyy-MM-dd&quot;).&#xA;Example : 2023-12-01 " Name="out_strPreviousWorkingDay" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="This will be output in this format - (&quot;yyyy-MM-dd&quot;).&#xA;Example : 2023-12-01 " Name="out_strCurrentWorkingDay" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Please provide the maximum number of loop iternations to perform. This counter number will prevent code from infinite loop. &#xA;Example : in_intMaxLoopCounter=10 , if counter is increased by 10 then exception message will be generated. " Name="in_intMaxLoopCounter" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Please provide exception message for maximum counter value reached. &#xA;Example : Maximum loop attempts are reached, Please increase IntMaxLoopCounter value and try again." Name="in_excMsgMaxLoopCounter" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Please Provide Caleder Name from which you wish to read excluded dates. Plesae note Caleder Name must be defined in Orchestrator." Name="in_strCalendarName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Please provide exception message for invalidate calendar name. &#xA;Example : Invalid calendar name found. " Name="in_excMsgInvalidCalendarName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1636.6666666666667,1252.6666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence - Main " sap:VirtualizedContainerService.HintSize="1646.6666666666667,1188" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch - Get Previous Working Day" sap:VirtualizedContainerService.HintSize="1584.6666666666667,1077.3333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart DisplayName="Get Previous Working Day - Flowchart" sap:VirtualizedContainerService.HintSize="1546,841.3333333333334" sap2010:WorkflowViewState.IdRef="Flowchart_8">
          <Flowchart.Variables>
            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(of String,String)()]" Name="dictPreviousCalendar" />
            <Variable x:TypeArguments="x:String" Name="strPreviousResponse" />
            <Variable x:TypeArguments="x:String" Name="strPreviousDateOutput" />
            <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)()]" Name="lstExcludeddateFormatted" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">810,2.6666666666666643</av:Point>
              <av:Size x:Key="ShapeSize">60,74.66666666666667</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">840,77.33333333333334 840,107.33333333333334 830,107.33333333333334 830,198.33333333333334</av:PointCollection>
              <x:Double x:Key="Width">1511.975</x:Double>
              <x:Double x:Key="Height">804.3333333333333</x:Double>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID7</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">730,198.33333333333334</av:Point>
                <av:Size x:Key="ShapeSize">200,159.33333333333334</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">830,357.6666666666667 830,387.66666666666674 840.6666666666666,387.66666666666674 840.6666666666666,416.66666666666663</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Collects All calendar details from Orchestrator and Store it in Dictionary Object. This will be useful in next steps." DisplayName="Sequence - Get Calendar" sap:VirtualizedContainerService.HintSize="572,1204" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <Sequence.Variables>
                <Variable x:TypeArguments="njl:JObject" Name="JResponseObj" />
                <Variable x:TypeArguments="x:Int32" Name="intCounter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Start Log Msg" sap:VirtualizedContainerService.HintSize="510,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Get Previous Working Day task started.&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Getch Calendar Details From Orchestrator " DisplayName="Orchestrator HTTP Request - Get Calendar Details" sap:VirtualizedContainerService.HintSize="510,277.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_3" Method="GET" RelativeEndpoint="/odata/Calendars" Result="[strPreviousResponse]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:OrchestratorHttpRequest>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="Deserilize Json Response of Calendar &#xA;" DisplayName="Deserialize JSON - Extract Calendar Details" sap:VirtualizedContainerService.HintSize="510,104" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[JResponseObj]" JsonString="[strPreviousResponse]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:DeserializeJson>
              <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, njl:JToken)" sap2010:Annotation.AnnotationText="Extract and append Each Calendar Name and calendar id to Dictionary Object. This will be useful in next set of Step." CurrentIndex="[intCounter]" DisplayName="For Each - Extract and Append Calendar data" sap:VirtualizedContainerService.HintSize="510,404.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[JResponseObj]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, njl:JToken)">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, njl:JToken)" Name="currentKeyValuePairOfTextAndJToken" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body - Extract and append calendar data" sap:VirtualizedContainerService.HintSize="476,172" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - Append to Dictionary" sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_84">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[dictPreviousCalendar(JResponseObj("value")(intCounter).SelectToken("Name").ToString.ToUpper)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[JResponseObj("value")(intCounter).SelectToken("Id").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Check if Required input calendar defined in orchestrator. If not then throw Exception and exists flowchart. &#xA;" Condition="[dictPreviousCalendar.Keys.Contains(in_strCalendarName.ToUpper)]" DisplayName="Flow Decision - Calendar Exists ?" sap:VirtualizedContainerService.HintSize="160,210.66666666666666" sap2010:WorkflowViewState.IdRef="FlowDecision_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">760.6666666666666,416.66666666666663</av:Point>
                    <av:Size x:Key="ShapeSize">160,210.66666666666666</av:Size>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <av:PointCollection x:Key="TrueConnector">760.6666666666666,522 730.6666666666666,522 730.6666666666666,500 600,500</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">920.6666666666666,522 950.6666666666666,522 950.6666666666666,510 1110,510</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">400,473.3333333333333</av:Point>
                        <av:Size x:Key="ShapeSize">200,53.333333333333336</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">400,500 370,500 370,518.2066666666666 260,518.2066666666666</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - calendar Exist Log Msg" sap:VirtualizedContainerService.HintSize="200,53.333333333333336" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Input calendar &quot;+in_strCalendarName+&quot; is defined in Orchestrator.&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">60,438.53999999999996</av:Point>
                            <av:Size x:Key="ShapeSize">200,159.33333333333334</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">160,597.8733333333333 160,733.3333333333334 240,733.3333333333334</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap2010:Annotation.AnnotationText="Collects All the Excluded dates from calendar and Store it in List Object. This will be usedful in next steps." DisplayName="Sequence - Get All Exclusing Dates " sap:VirtualizedContainerService.HintSize="200,159.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_31">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="strCalendarId" />
                            <Variable x:TypeArguments="njl:JObject" Name="JsonExcludedDates" />
                            <Variable x:TypeArguments="s:String[]" Name="arrExcludedDates" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="Extract calendar Id of the required calendar." DisplayName="Assign-Extract calendar ID " sap:VirtualizedContainerService.HintSize="434,115.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_85">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strCalendarId]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[dictPreviousCalendar(in_strCalendarName.ToUpper).ToString]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Call calendar Details Api with calendar Id parameter." DisplayName="Orchestrator HTTP Request - Call calendar Details Api " sap:VirtualizedContainerService.HintSize="434,277.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_4" Method="GET" RelativeEndpoint="[&quot;odata/Calendars(&quot;+strCalendarId+&quot;)&quot;]" Result="[strPreviousResponse]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:OrchestratorHttpRequest>
                          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON - Extract Json " sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[JsonExcludedDates]" JsonString="[strPreviousResponse]" />
                          <Assign sap2010:Annotation.AnnotationText="Extract all the excluded dates to Arrary Object." DisplayName="Assign - Extract Excluded date to Arrary" sap:VirtualizedContainerService.HintSize="434,115.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_86">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[arrExcludedDates]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[JsonExcludedDates("ExcludedDates").ToString.Replace("[","").Replace("]","").Split(",")]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Append all excluded dates into required format for easy processing." DisplayName="For Each - Extract Excluded date into List Obj" sap:VirtualizedContainerService.HintSize="434,616" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrExcludedDates]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,396.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strOutput" />
                                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="strRegExpreResult" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Matches sap2010:Annotation.AnnotationText="Extract date using regular expression&#xA;" BuilderPattern="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z" DisplayName="Find Matching Patterns - process Date" FirstMatch="[strOutput]" sap:VirtualizedContainerService.HintSize="334,104" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[currentItem.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z" RegexOption="IgnoreCase, Compiled" Result="[strRegExpreResult]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Matches>
                                  <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" sap2010:Annotation.AnnotationText="Append excluded date into List Obj." DisplayName="Append Item to List - append excluded dates" sap:VirtualizedContainerService.HintSize="334,165.33333333333334" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_2" ItemToAppend="[(DateTime.ParseExact(strRegExpreResult(0).tostring, &quot;yyyy-MM-ddTHH:mm:ssZ&quot;, Nothing)).ToString(&quot;yyyy-MM-dd&quot;)]" List="[lstExcludeddateFormatted]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </uasa:AppendItemToList>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <ui:LogMessage DisplayName="Log Message - NonWorking days" sap:VirtualizedContainerService.HintSize="434,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;All the Non-working days are collected from calendar.&quot;]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">240,691.3333333333334</av:Point>
                                <av:Size x:Key="ShapeSize">200,84</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">440,733.3333333333334 470,733.3333333333334 470,737.9999999999999 520,737.9999999999999</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Evaluate Current day " DisplayName="LocateNextworkingDayCurrentDate-Flowchart.xaml Current Day - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="LocateNextworkingDayCurrentDate-Flowchart.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strInputDate">[in_strInputDate]</InArgument>
                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_lstExcludeddateFormatted">[lstExcludeddateFormatted]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_strPreviousDateOutput">[out_strCurrentWorkingDay]</OutArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="in_intMaxLoopCounter">[in_intMaxLoopCounter]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_excMessageMaxLoopCounter">[in_excMsgMaxLoopCounter]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">520,674.3333333333333</av:Point>
                                    <av:Size x:Key="ShapeSize">200,127.33333333333333</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">720,737.9999999999999 750,737.9999999999999 750,740 800,740</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap2010:Annotation.AnnotationText="process its previous date&#xA;" DisplayName="Sequence - Load Previous date of Current date " sap:VirtualizedContainerService.HintSize="200,127.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="s:DateTime" Name="dt_PrevTempDate" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - Conver to date Obj Prev" sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_88">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[dt_PrevTempDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(out_strCurrentWorkingDay)]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <Assign DisplayName="Assign - Get its previous date Prev" sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_89">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strPreviousDateOutput]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[dt_PrevTempDate.AddDays(-1).ToString("yyyy-MM-dd")]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">800,713.3333333333334</av:Point>
                                        <av:Size x:Key="ShapeSize">200,53.333333333333336</av:Size>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LocateNextworkingDayCurrentDate Previous Day -Flowchart.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,53.333333333333336" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="LocateNextworkingDayCurrentDate-Flowchart.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_strInputDate">[strPreviousDateOutput]</InArgument>
                                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_lstExcludeddateFormatted">[lstExcludeddateFormatted]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_strPreviousDateOutput">[out_strPreviousWorkingDay]</OutArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_intMaxLoopCounter">[in_intMaxLoopCounter]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_excMessageMaxLoopCounter">[in_excMsgMaxLoopCounter]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowStep x:Name="__ReferenceID2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">1110,483.3333333333333</av:Point>
                        <av:Size x:Key="ShapeSize">200,53.333333333333336</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Throw DisplayName="Throw - calendar Not Found" Exception="[new ApplicationException(in_excMsgInvalidCalendarName)]" sap:VirtualizedContainerService.HintSize="200,53.333333333333336" sap2010:WorkflowViewState.IdRef="Throw_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Throw>
                  </FlowStep>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1550.6666666666667,21.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message -  Print Error Msg" sap:VirtualizedContainerService.HintSize="334,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;Error Description : &quot;+ exception.Message.ToString]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:LogMessage DisplayName="Log Message - End Log Msg" sap:VirtualizedContainerService.HintSize="334,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Get Previous Working Day task completed.&quot;]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>